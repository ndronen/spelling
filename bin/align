#!/usr/bin/env python

from __future__ import print_function

import sys
import argparse
from alignment.sequence import Sequence
from alignment.vocabulary import Vocabulary
from alignment.sequencealigner import SimpleScoring, StrictGlobalSequenceAligner

def align(word1, word2):
    a = Sequence(word1)
    b = Sequence(word2)
    v = Vocabulary()

    aEncoded = v.encodeSequence(a)
    bEncoded = v.encodeSequence(b)

    scoring = SimpleScoring(2, -1)
    aligner = StrictGlobalSequenceAligner(scoring, -2)

    score, encodeds = aligner.align(aEncoded, bEncoded, backtrace=True)

    for i,encoded in enumerate(encodeds):
        alignment = v.decodeSequenceAlignment(encoded)
        print('alignment ' + str(i) + ' ' + str(alignment))
        print('Alignment score:', alignment.score)
        print('Percent identity:', alignment.percentIdentity())
        print()
    print(alignment.first)
    print(alignment.second)

    return alignment

def main(args):
    align(args.word1, args.word2)

def build_parser():
    parser = argparse.ArgumentParser(
            description='align two words')
    parser.add_argument('word1', metavar='WORD1',
            help='the first word')
    parser.add_argument('word2', metavar='WORD2',
            help='the second word')
    return parser.parse_args()

if __name__ == '__main__':
    sys.exit(main(build_parser()))
