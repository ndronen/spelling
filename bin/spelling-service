#!/usr/bin/env python

from __future__ import print_function
import sys
import argparse
import json
import requests
import xmltodict
import pandas as pd
import spelling.service as service

def main(args):
    text = args.text.read().strip()
    url = args.host + args.url
    print("text", text)
    print("url", url)
    corrections = service.correct(url, text)
    df = pd.DataFrame(corrections)
    df.to_csv(args.csv_output, sep='\t', encoding='utf8', index=False)

def build_parser():
    parser = argparse.ArgumentParser(
            description="Correct spelling using the Boulder Labs Grammar5 spelling service")
    aa = parser.add_argument
    aa("--text", type=argparse.FileType("r"), default=sys.stdin,
            help="The input file (or stdin)")
    aa("--url", type=str,
            default="/pkt-aggregator/Service/spelling",
            help="The path component of the URL of the spelling service")
    aa("--host", type=str, 
            help="The host of the spelling service")
    aa("--csv-output", type=argparse.FileType("w"), default=sys.stdout,
            help="The file to which to write CSV output (or stdout)")

    args = parser.parse_args()

    return args

if __name__ == "__main__":
    sys.exit(main(build_parser()) == True)
